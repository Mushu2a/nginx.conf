# vim: sw=4 sts=4
# Reference: http://nginx.org/en/docs/

worker_processes auto;
events { worker_connections 1024; }

http {
    sendfile on;
    tcp_nopush on;
    server_tokens off;

    include mime.types;
    default_type application/octet-stream;

    gzip on;
    gzip_disable "msie6";

    # Redirect all http request to https
    server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # IPv4 (14.41.17.161)
    server {
        listen 80;
        server_name 14.41.17.161;
        return 301 https://kuma.hyeon.me$request_uri;
    }

    # kuma.hyeon.me
    server {
        listen 443 ssl;
        server_name kuma.hyeon.me;

        ssl_certificate /etc/letsencrypt/live/kuma.hyeon.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/kuma.hyeon.me/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_trusted_certificate /etc/letsencrypt/live/kuma.hyeon.me/chain.pem;
        ssl_stapling on;
        ssl_stapling_verify on;

        root /usr/share/nginx/welcome;
        # access_log  logs/host.access.log  main;
        # error_page  404                   /404.html;
        # error_page  500 502 503 504       /50x.html;
    }

    # kollus.hyeon.me
    # TODO: HTTPS
    upstream kollus { server localhost:4567 fail_timeout=0; }
    server {
        listen 80;
        server_name kollus.hyeon.me;

        root /home/simnalamburt/kollus-ruby-sample/public;
        try_files $uri @app;

        location @app {
            # Note: Do I need more configs?
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://kollus;
        }
    }
}
